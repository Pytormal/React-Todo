{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/TodoForm.js","App.js","index.js"],"names":["Todo","props","onClick","toggleTask","task","id","className","completed","name","TodoList","map","key","TodoForm","handleChanges","e","setState","state","newTask","target","value","submitTask","preventDefault","localStorage","setItem","addToDo","saveData","Storage","onSubmit","this","type","onChange","React","Component","ClearData","clear","App","taskId","console","log","toDoName","newToDo","Date","now","clearCompleted","filter","Source","src","ReactDOM","render","document","getElementById"],"mappings":"wSAYeA,EAVF,SAACC,GACV,OACI,yBACIC,QAAS,kBAAMD,EAAME,WAAWF,EAAMG,KAAKC,KAC3CC,UAAS,cAASL,EAAMG,KAAKG,UAAY,aAAe,KACxD,2BAAIN,EAAMG,KAAKI,QCcZC,EAdE,SAACR,GACd,OACI,oCACI,yBAAKK,UAAU,aACdL,EAAMG,KAAKM,KAAI,SAACN,GAAD,OACZ,kBAAC,EAAD,CAAMO,IAAKP,EAAKC,GAAID,KAAMA,EAAMD,WAAYF,EAAME,mBC2CnDS,E,kDApDX,aAAe,IAAD,8BACV,gBAMJC,cAAgB,SAACC,GAEb,EAAKC,SAAL,2BAAmB,EAAKC,OAAxB,IAA+BC,QAASH,EAAEI,OAAOC,UATvC,EAYdC,WAAa,SAACN,GACVA,EAAEO,iBACFC,aAAaC,QACT,EAAKtB,MAAMuB,QAAQ,EAAKR,MAAMC,SAC9B,EAAKF,SAAL,2BAAmB,EAAKC,OAAxB,IAA+BC,QAAS,QAhBlC,EAmBdQ,SAAW,WACc,qBAAbC,SACRJ,aAAaC,QAAQ,EAAKP,MAAMC,QAAS,EAAKD,MAAMC,UAnBpD,EAAKD,MAAQ,CACTC,QAAS,IAHH,E,qDA2BV,OACI,0BAAMX,UAAU,OAAOqB,SAAUC,KAAKR,YAElC,yBAAKd,UAAU,eAEX,4BAAQA,UAAU,YAAYJ,QAAS0B,KAAKH,UAA5C,OAEI,6BACI,2BAAOnB,UAAU,QACjBuB,KAAK,OACLrB,KAAK,OACLW,MAAOS,KAAKZ,MAAMC,QAClBa,SAAUF,KAAKf,uB,GAxCpBkB,IAAMC,W,OCUvB5B,G,kBAAO,CACX,CACEI,KAAM,qCACNH,GAAI,OACJE,WAAW,GAEb,CACEC,KAAM,wCACNH,GAAI,UACJE,WAAW,GAEb,CACEC,KAAM,gEACNH,GAAI,QACJE,WAAW,GAEb,CACEC,KAAM,kCACNH,GAAI,UACJE,WAAW,GAEb,CACEC,KAAM,iBACNH,GAAI,YACJE,WAAW,KAIT0B,EAAY,WAChBX,aAAaY,SAyFAC,E,kDAjFb,aAAe,IAAD,8BACZ,gBAMFhC,WAAa,SAAAiC,GACXC,QAAQC,IAAI,eAAgBF,GAC5B,EAAKrB,SAAS,CACZX,KAAM,EAAKY,MAAMZ,KAAKM,KAAI,SAACN,GACzB,OAAIgC,IAAWhC,EAAKC,GACX,2BACFD,GADL,IAEEG,WAAYH,EAAKG,YAGdH,QAjBC,EAsBdoB,QAAU,SAACe,GACT,IAAMC,EAAU,CACdhC,KAAM+B,EACNlC,GAAIoC,KAAKC,MACTnC,WAAW,GAEb,EAAKQ,SAAL,2BACK,EAAKC,OADV,IAEEZ,KAAK,GAAD,mBAAM,EAAKY,MAAMZ,MAAjB,CAAuBoC,QA9BjB,EAkCdG,eAAiB,SAAC7B,GAChBA,EAAEO,iBACF,EAAKN,SAAL,2BACK,EAAKC,OADV,IAEEZ,KAAM,EAAKY,MAAMZ,KAAKwC,QAAO,SAACxC,GAAD,OAAWA,EAAKG,iBApC/C,EAAKS,MAAQ,CACXZ,QAHU,E,mDA4CPH,GACL,OACE,6BAASK,UAAU,OACjB,yBAAKA,UAAU,eACb,wBAAIA,UAAU,UAAd,6BACA,kBAAC,EAAD,CAAUkB,QAASI,KAAKJ,WAGhC,yBAAKlB,UAAU,SAET,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEH,WAAYyB,KAAKzB,WACjBC,KAAMwB,KAAKZ,MAAMZ,KACjBuC,eAAgBf,KAAKe,kBAIxB,yBAAKrC,UAAU,gBACd,4BAAQA,UAAU,UAAUJ,QAAS0B,KAAKe,gBAA1C,yBAGA,4BAAQrC,UAAU,UAAUJ,QAAS+B,GAArC,0BAMF,kBAAC,IAAD,KACE,kBAAC,IAAQY,OAAT,CAAgBC,IAAK,wIAAyIjB,KAAK,W,GA9E3JE,IAAMC,WCxCxBe,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.257de01a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Todo = (props) => {\r\n    return (\r\n        <div\r\n            onClick={() => props.toggleTask(props.task.id)}\r\n            className={`task${props.task.completed ? ' completed' : ''}`}>\r\n            <p>{props.task.name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo","// your components will all go in this `component` directory.\n// feel free to change this component.js into TodoList.js\n\nimport React from 'react';\nimport Todo from './Todo';\n\n\nconst TodoList = (props) => {\n    return (\n        <>\n            <div className='todo-list'>\n            {props.task.map((task) => (\n                <Todo key={task.id} task={task} toggleTask={props.toggleTask} />\n            ))}\n        \n            </div>\n       \n        </>\n    )\n}\n\nexport default TodoList;","import React from 'react'\r\n\r\nclass TodoForm extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            newTask: ''\r\n        };\r\n    }\r\n    local\r\n    handleChanges = (e) => {\r\n\r\n        this.setState({ ...this.state, newTask: e.target.value });\r\n    }\r\n\r\n    submitTask = (e) => {\r\n        e.preventDefault();\r\n        localStorage.setItem(\r\n            this.props.addToDo(this.state.newTask),\r\n            this.setState({ ...this.state, newTask: '' }))\r\n    };\r\n\r\n    saveData = () => {\r\n    if (typeof (Storage) !== \"undefined\") {\r\n        localStorage.setItem(this.state.newTask, this.state.newTask)\r\n    }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <form className='nPut' onSubmit={this.submitTask}>\r\n                \r\n                <div className='btn-contain'>\r\n                    \r\n                    <button className='addButton' onClick={this.saveData}>Add</button>\r\n                       \r\n                        <div>\r\n                            <input className='Input'\r\n                            type='text'\r\n                            name='task'\r\n                            value={this.state.newTask}\r\n                            onChange={this.handleChanges}\r\n                            />\r\n                        </div>\r\n                  \r\n                </div >\r\n                \r\n                \r\n              \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoForm\r\n\r\n// saveData = () => {\r\n//     if (typeof (Storage) !== \"undefined\") {\r\n//         localStorage.setItem(\"newTask\", this.state.newTask)\r\n//     }\r\n// }","import React from 'react';\nimport TodoList from './components/TodoList'\nimport TodoForm from './components/TodoForm'\n\nimport VideoBg from \"reactjs-videobg\";\n// import mp4 from \"./components/girl.mp4\";\n\nimport './components/reset.css'\nimport './components/main.css'\nimport './components/dual-screen.css'\n\n\nconst task = [\n  {\n    name: 'Enter your Todo items in box above',\n    id: 123124,\n    completed: false\n  },\n  {\n    name: 'Select or touch a task to complete it',\n    id: 365475476,\n    completed: false\n  },\n  {\n    name: 'click the \"Clear Completed Tasks\" button to remove your tasks',\n    id: 3654756,\n    completed: false\n  },\n  {\n    name: 'make as many tasks as you like!',\n    id: 365411756,\n    completed: false\n  },\n  {\n    name: 'Enjoy the App!',\n    id: 36541231756,\n    completed: false\n  }\n]\n\nconst ClearData = () => {\n  localStorage.clear();\n}\n\nclass App extends React.Component {\n  // you will need a place to store your state in this component.\n  // design `App` to be the parent component of your application.\n  // this component is going to take care of state, and any change handlers you need to work with your state\n\n  constructor() {\n    super();\n    this.state = {\n      task\n    };\n  }\n\n  toggleTask = taskId => {\n    console.log('task toggled', taskId)\n    this.setState({\n      task: this.state.task.map((task) => {\n        if (taskId === task.id) {\n          return {\n            ...task,\n            completed: !task.completed\n          }\n        }\n        return task\n      })\n    })\n  }\n\n  addToDo = (toDoName) => {\n    const newToDo = {\n      name: toDoName,\n      id: Date.now(),\n      completed: false\n    }\n    this.setState({\n      ...this.state,\n      task: [...this.state.task, newToDo]\n    })\n  }\n\n  clearCompleted = (e) => {\n    e.preventDefault();\n    this.setState({\n      ...this.state,\n      task: this.state.task.filter((task) => !task.completed)\n    })\n  }\n\n \n\n  render(props) {\n    return (\n      <section className='App'>\n        <div className=\"h-container\">\n          <h1 className=\"header\">Welcome to your Todo App!</h1>\n          <TodoForm addToDo={this.addToDo} />\n        </div>\n        \n  <div className=\"split\">      \n        \n        <div className=\"todo-contain\">\n          <TodoList\n            toggleTask={this.toggleTask}\n            task={this.state.task}\n            clearCompleted={this.clearCompleted}\n          />\n          </div>\n          \n         <div className='btn-contain2'>\n          <button className='clr-btn' onClick={this.clearCompleted}>\n            Clear Completed Tasks\n            </button>\n          <button className='clr-btn' onClick={ClearData}>\n            Clear Local app data</button>\n          </div>\n          \n        </div>\n\n        <VideoBg >\n          <VideoBg.Source src={'https://player.vimeo.com/external/384669529.sd.mp4?s=9298f360e4c1b897d738481bcfdc4a2f607e442a&profile_id=139&oauth2_token_id=57447761'} type=\"\" />\n        </VideoBg>\n\n      </section>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}